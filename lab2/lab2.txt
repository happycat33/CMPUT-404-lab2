Question 1: How do you specify a TCP socket in Python?

- 1.1: To specify a TCP socket, you need to open the socket, providing address family (which ipv it is) and, 
       the TCP, then bind the socket to an IP and Port. Now the socket listens to that IP and PORT. 

Question 2: What is the difference between a client socket and a server socket in Python?

- 2.1: Server sockets need a specific address family and TCP as well as needing to bind. On the other hand, the
       client socket doesnt need to do that. For the client socket, they just need to initiate a connection to a IP, 
       while the server socket just listens and responds to the client.

Question 3: How do we instruct the OS to let us reuse the same bind port?

- 3.1: In order to instruct the OS to use the same bind port, we use set sockopt (set socket option) when setting
	 the socket. This option includes the command, "reuse address", and when set it to true, this allows us to 
       reuse the bind port 

Question 4: What information do we get about incoming connections?

- 4.1: We get where the incoming connection is coming from (the address which contains the ipv4 and port)

Question 5: What is returned by recv() from the server after it is done sending the HTTP request?

- 5.1: While the recv does receive the data from the client server, it will only return an empty string

Question 6: Provide a link to your code on GitHub.

- 6.1: https://github.com/happycat33/CMPUT-404-lab2.git

server															client
open socket{AddressFamily (ipv4), transport protocol (TCP)						     open socket
bind (IP, PORT)
listen to this ^	
															     Open connection

												Connected
											Communication between them						